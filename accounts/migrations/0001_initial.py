# Generated by Django 4.0.4 on 2024-09-11 14:46
from __future__ import annotations

import uuid

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Devices',
            fields=[
                (
                    'id', models.UUIDField(
                        default=uuid.uuid4,
                        editable=False, primary_key=True, serialize=False,
                    ),
                ),
                ('api_token', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'password', models.CharField(
                        max_length=128, verbose_name='password',
                    ),
                ),
                (
                    'last_login', models.DateTimeField(
                        blank=True, null=True, verbose_name='last login',
                    ),
                ),
                (
                    'is_superuser', models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status',
                    ),
                ),
                (
                    'first_name', models.CharField(
                        blank=True,
                        max_length=150, verbose_name='first name',
                    ),
                ),
                (
                    'last_name', models.CharField(
                        blank=True,
                        max_length=150, verbose_name='last name',
                    ),
                ),
                (
                    'email', models.EmailField(
                        blank=True,
                        max_length=254, verbose_name='email address',
                    ),
                ),
                (
                    'date_joined', models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name='date joined',
                    ),
                ),
                (
                    'id', models.UUIDField(
                        default=uuid.uuid4,
                        editable=False, primary_key=True, serialize=False,
                    ),
                ),
                ('username', models.CharField(max_length=10, unique=True)),
                ('pin', models.CharField(max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                (
                    'groups', models.ManyToManyField(
                        blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions', models.ManyToManyField(
                        blank=True, help_text='Specific permissions for this user.',
                        related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
